#!/usr/bin/zsh
cd

CACHE="$HOME/.github-my-repos"

if [[ ! -f "$CACHE" ]] || [[ $* == *--refresh* ]] || [[ $* == *-r* ]]; then
  githubmyrepos | sort > "$CACHE"
  if [ -f "$HOME/.repos" ]; then
    cat "$HOME/.repos" >> "$CACHE"
  fi
fi

remote=$((cat "$CACHE" | awk '{print "git@github.com:" $1}' ; cat "$HOME/.git-my-repos") | selecta)
if [ -z "$remote" ]; then
  exit 1
fi
slug=$(echo -n $remote | cut -f 2 -d ':')
base=$(basename "$slug")

# All hail Go modules!
# go_dir="$GOPATH/src/github.com/$slug"
#
# if [ -d "$go_dir" ]; then
#   cd "$go_dir"
#   git fetch origin
#   git checkout master
#   git merge --ff-only origin/master
#   echo "$go_dir"
#   exit 0
# fi

clone="$WORKSPACE/$base"

git clone "$remote" "$clone"

(
  cd "$clone"
  git submodule update --init --recursive
  gitinstallhooks
  # ssb=$(fgrep "$slug" "$HOME/.github-to-ssb" | cut -d ' ' -f 2)
  if git remote -v | fgrep "github" > /dev/null; then
    gh issue
  fi
  git grep "TODO"
)

# if [ -f "$clone/Gopkg.toml" ]; then
#   mkdir -p $(dirname "$go_dir")
#   mv "$clone" $(dirname "$go_dir")
#   echo "$go_dir"
# fi
